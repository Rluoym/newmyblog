<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.myblog.po.User">
		<id column="user_account" jdbcType="VARCHAR" property="userAccount" />
		<result column="user_password" jdbcType="VARCHAR" property="userPassword" />
		<result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
		<result column="user_introduce" jdbcType="VARCHAR" property="userIntroduce" />
		<result column="user_signature" jdbcType="VARCHAR" property="userSignature" />
		<result column="user_contact_id" jdbcType="VARCHAR" property="userContactId" />
		<result column="user_memo" jdbcType="VARCHAR" property="userMemo" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_account, user_password, user_nickname, user_introduce, user_signature,
		user_contact_id,
		user_memo
	</sql>
	<select id="selectByExample" parameterType="com.myblog.po.UserExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample" parameterType="com.myblog.po.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.myblog.po.User">
		insert into user (user_account, user_password, user_nickname,
		user_introduce, user_signature, user_contact_id,
		user_memo)
		values (#{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
		#{userNickname,jdbcType=VARCHAR},
		#{userIntroduce,jdbcType=VARCHAR}, #{userSignature,jdbcType=VARCHAR}, #{userContactId,jdbcType=VARCHAR},
		#{userMemo,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.myblog.po.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userNickname != null">
				user_nickname,
			</if>
			<if test="userIntroduce != null">
				user_introduce,
			</if>
			<if test="userSignature != null">
				user_signature,
			</if>
			<if test="userContactId != null">
				user_contact_id,
			</if>
			<if test="userMemo != null">
				user_memo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userAccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNickname != null">
				#{userNickname,jdbcType=VARCHAR},
			</if>
			<if test="userIntroduce != null">
				#{userIntroduce,jdbcType=VARCHAR},
			</if>
			<if test="userSignature != null">
				#{userSignature,jdbcType=VARCHAR},
			</if>
			<if test="userContactId != null">
				#{userContactId,jdbcType=VARCHAR},
			</if>
			<if test="userMemo != null">
				#{userMemo,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.myblog.po.UserExample"
		resultType="java.lang.Long">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userAccount != null">
				user_account = #{record.userAccount,jdbcType=VARCHAR},
			</if>
			<if test="record.userPassword != null">
				user_password = #{record.userPassword,jdbcType=VARCHAR},
			</if>
			<if test="record.userNickname != null">
				user_nickname = #{record.userNickname,jdbcType=VARCHAR},
			</if>
			<if test="record.userIntroduce != null">
				user_introduce = #{record.userIntroduce,jdbcType=VARCHAR},
			</if>
			<if test="record.userSignature != null">
				user_signature = #{record.userSignature,jdbcType=VARCHAR},
			</if>
			<if test="record.userContactId != null">
				user_contact_id = #{record.userContactId,jdbcType=VARCHAR},
			</if>
			<if test="record.userMemo != null">
				user_memo = #{record.userMemo,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set user_account = #{record.userAccount,jdbcType=VARCHAR},
		user_password = #{record.userPassword,jdbcType=VARCHAR},
		user_nickname = #{record.userNickname,jdbcType=VARCHAR},
		user_introduce = #{record.userIntroduce,jdbcType=VARCHAR},
		user_signature = #{record.userSignature,jdbcType=VARCHAR},
		user_contact_id = #{record.userContactId,jdbcType=VARCHAR},
		user_memo = #{record.userMemo,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.myblog.po.User">
		update user
		<set>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNickname != null">
				user_nickname = #{userNickname,jdbcType=VARCHAR},
			</if>
			<if test="userIntroduce != null">
				user_introduce = #{userIntroduce,jdbcType=VARCHAR},
			</if>
			<if test="userSignature != null">
				user_signature = #{userSignature,jdbcType=VARCHAR},
			</if>
			<if test="userContactId != null">
				user_contact_id = #{userContactId,jdbcType=VARCHAR},
			</if>
			<if test="userMemo != null">
				user_memo = #{userMemo,jdbcType=VARCHAR},
			</if>
		</set>
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.myblog.po.User">
		update user
		set user_password = #{userPassword,jdbcType=VARCHAR},
		user_nickname = #{userNickname,jdbcType=VARCHAR},
		user_introduce = #{userIntroduce,jdbcType=VARCHAR},
		user_signature = #{userSignature,jdbcType=VARCHAR},
		user_contact_id = #{userContactId,jdbcType=VARCHAR},
		user_memo = #{userMemo,jdbcType=VARCHAR}
		where user_account = #{userAccount,jdbcType=VARCHAR}
	</update>
</mapper>